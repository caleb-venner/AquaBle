{"version":3,"file":"commands-BJ6ojNfp.js","sources":["../../src/api/commands.ts"],"sourcesContent":["// Command system API functions\n\nimport { postJson, fetchJson } from \"./http\";\nimport type {\n  CommandRecord,\n  CommandRequest,\n} from \"../types/api\";\n\n/**\n * Execute a command on a device using the unified command system\n */\nexport async function executeCommand(\n  address: string,\n  request: CommandRequest\n): Promise<CommandRecord> {\n  return postJson<CommandRecord>(`api/devices/${encodeURIComponent(address)}/commands`, request);\n}\n\n/**\n * Get command history for a device\n */\nexport async function getCommandHistory(\n  address: string,\n  limit = 20\n): Promise<CommandRecord[]> {\n  return fetchJson<CommandRecord[]>(\n    `api/devices/${encodeURIComponent(address)}/commands?limit=${limit}`\n  );\n}\n\n/**\n * Get a specific command by ID\n */\nexport async function getCommand(\n  address: string,\n  commandId: string\n): Promise<CommandRecord> {\n  return fetchJson<CommandRecord>(\n    `api/devices/${encodeURIComponent(address)}/commands/${encodeURIComponent(commandId)}`\n  );\n}\n"],"names":["executeCommand","address","request","postJson"],"mappings":"gFAWA,eAAsBA,EACpBC,EACAC,EACwB,CACxB,OAAOC,EAAwB,eAAe,mBAAmBF,CAAO,CAAC,YAAaC,CAAO,CAC/F"}