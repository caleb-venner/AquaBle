{"version":3,"file":"percentages-test-CiPqM1s0.js","sources":["../../tests/percentages-test.html?html-proxy&index=1.js"],"sourcesContent":["\n        import { calculateLightWattage } from '../src/utils/wattage-calculator.ts';\n\n        // Test cases directly from Percentages.txt\n        const testCases = [\n            { red: 50, green: 50, blue: 50, white: 50, expected: 67, name: \"Test 1: 50% All Channels\" },\n            { red: 75, green: 75, blue: 75, white: 75, expected: 100, name: \"Test 2: 75% All Channels\" },\n            { red: 100, green: 100, blue: 100, white: 100, expected: 138, name: \"Test 3: 100% All Channels\" },\n            { red: 100, green: 100, blue: 100, white: 0, expected: 117, name: \"Test 4: RGB (no White)\" },\n            { red: 100, green: 100, blue: 0, white: 100, expected: 118, name: \"Test 5: RGW (no Blue)\" },\n            { red: 100, green: 0, blue: 100, white: 100, expected: 87, name: \"Test 6: RBW (no Green)\" },\n            { red: 0, green: 100, blue: 100, white: 100, expected: 104, name: \"Test 7: GBW (no Red)\" },\n            { red: 136, green: 88, blue: 110, white: 55, expected: 138, name: \"Test 8: Mixed High (Power Limited)\" },\n            { red: 76, green: 127, blue: 103, white: 65, expected: 138, name: \"Test 9: Mixed High (Power Limited)\" },\n            { red: 120, green: 113, blue: 121, white: 0, expected: 138, name: \"Test 10: RGB High (Power Limited)\" },\n            { red: 130, green: 88, blue: 126, white: 50, expected: 138, name: \"Test 11: Mixed High (Power Limited)\" },\n            { red: 127, green: 88, blue: 136, white: 46, expected: 138, name: \"Test 12: Mixed High (Power Limited)\" },\n            { red: 140, green: 0, blue: 140, white: 0, expected: 92, name: \"Test 13: Red+Blue 140%\" },\n            { red: 140, green: 0, blue: 0, white: 140, expected: 104, name: \"Test 14: Red+White 140%\" },\n            { red: 136, green: 140, blue: 0, white: 0, expected: 138, name: \"Test 15: Red+Green High (Power Limited)\" },\n            { red: 39, green: 61, blue: 105, white: 52, expected: 82, name: \"Test 16: Mixed Low-Medium\" }\n        ];\n\n        // Make functions available globally\n        window.runAllTests = runAllTests;\n        window.clearResults = clearResults;\n\n        function runAllTests() {\n            let exactMatches = 0;\n            let within1W = 0;\n            let within2W = 0;\n            let within5W = 0;\n            let results = '';\n\n            testCases.forEach((testCase, index) => {\n                // Use the ACTUAL algorithm - no external calculations\n                const result = calculateLightWattage({\n                    red: testCase.red,\n                    green: testCase.green,\n                    blue: testCase.blue,\n                    white: testCase.white\n                });\n\n                // Use requestedWattage (before power limiting) for more accurate test assessment\n                const actual = result.requestedWattage;\n                const powerLimited = result.powerLimited;\n                const finalWattage = result.totalWattage;\n                const expected = testCase.expected;\n                const diff = actual - expected;\n                const absDiff = Math.abs(diff);\n\n                let status = 'far';\n                let statusText = '‚ùå OFF';\n\n                if (absDiff === 0) {\n                    exactMatches++;\n                    within1W++;\n                    within2W++;\n                    within5W++;\n                    status = 'exact';\n                    statusText = '‚úÖ EXACT';\n                } else if (absDiff <= 1) {\n                    within1W++;\n                    within2W++;\n                    within5W++;\n                    status = 'close1';\n                    statusText = 'üü° ¬±1W';\n                } else if (absDiff <= 2) {\n                    within2W++;\n                    within5W++;\n                    status = 'close2';\n                    statusText = 'üü† ¬±2W';\n                } else if (absDiff <= 5) {\n                    within5W++;\n                    status = 'close5';\n                    statusText = 'üî∂ ¬±5W';\n                }\n\n                results += `<div class=\"test ${status}\">\n                    <strong>${testCase.name}</strong><br>\n                    Input: R:${testCase.red}% G:${testCase.green}% B:${testCase.blue}% W:${testCase.white}%<br>\n                    Expected: ${expected}W | Calculated: ${actual}W | Difference: ${diff > 0 ? '+' : ''}${diff}W ${statusText}<br>\n                    <small>Step: ${result.stepSum}W | Embedded: ${result.embeddedBaseSum}W | Shared: ${result.sharedBase}W | ${powerLimited ? `Power Limited: ${actual}W ‚Üí ${finalWattage}W` : 'No Power Limiting'}</small>\n                </div>`;\n            });\n\n            const summary = `\n                <h2>Test Results Summary</h2>\n                <p><strong>Total Tests:</strong> ${testCases.length}</p>\n                <p><strong>Exact Matches:</strong> ${exactMatches}/${testCases.length} (${Math.round(exactMatches/testCases.length*100)}%)</p>\n                <p><strong>Within ¬±1W:</strong> ${within1W}/${testCases.length} (${Math.round(within1W/testCases.length*100)}%)</p>\n                <p><strong>Within ¬±2W:</strong> ${within2W}/${testCases.length} (${Math.round(within2W/testCases.length*100)}%)</p>\n                <p><strong>Within ¬±5W:</strong> ${within5W}/${testCases.length} (${Math.round(within5W/testCases.length*100)}%)</p>\n\n                <h3>Algorithm Status</h3>\n                <p>Testing algorithm calculations (before power limiting) vs expected values.</p>\n                <p><strong>Note:</strong> Power-limited tests show calculated value ‚Üí final limited value.</p>\n            `;\n\n            document.getElementById('results').innerHTML = results;\n            document.getElementById('summary').innerHTML = summary;\n            document.getElementById('summary').style.display = 'block';\n\n            console.log('Test Results:');\n            console.log(`Exact matches: ${exactMatches}/${testCases.length}`);\n            console.log(`Within 1W: ${within1W}/${testCases.length}`);\n            console.log(`Within 2W: ${within2W}/${testCases.length}`);\n            console.log(`Within 5W: ${within5W}/${testCases.length}`);\n        }\n\n        function clearResults() {\n            document.getElementById('results').innerHTML = '';\n            document.getElementById('summary').style.display = 'none';\n        }\n\n        // Auto-run tests on page load\n        document.addEventListener('DOMContentLoaded', () => {\n            setTimeout(runAllTests, 500);\n        });\n    "],"names":["testCases","runAllTests","clearResults","exactMatches","within1W","within2W","within5W","results","testCase","index","result","calculateLightWattage","actual","powerLimited","finalWattage","expected","diff","absDiff","status","statusText","summary"],"mappings":"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"}